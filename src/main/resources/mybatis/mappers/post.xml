<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="post">
	
	<!-- 새로운 피드 작성  -->
	<insert id="insertPost" parameterType="PostVo">
		<selectKey keyProperty="postNo" resultType="int" order="BEFORE">
			select seq_post_no.nextval from dual
		</selectKey>
		<![CDATA[
			INSERT INTO POSTS 
						(postNo, 
						 userNo, 
						 postRegDate, 
						 postContent, 
						 postHit, 
						 postRepImg) 
			VALUES(#{postNo}, 
					#{userNo}, 
					SYSDATE, 
					#{postContent}, 
					0, 
					null)
		]]>
	</insert>
	
	<!-- 업로드된 사진 패스 저장 -->
	<insert id="insertFilepath" parameterType="PostfileVo">
		<![CDATA[
			INSERT INTO postfile
						(postFileNo,
						 postNo,
						 postFilePath) 
			VALUES(seq_postfile_no.nextval,
				   #{postNo},
				   #{postFilePath})
		]]>
	</insert>
	
	<!-- 모든 피드 출력 -->
	<select id="selectPost" resultType="PostVo">
		<![CDATA[
			SELECT p.postNo,
				   p.userNo,
			   	   p.postContent,
				   p.postRegDate,
			   	   p.postHit,
			   	   p.postRepImg,
			   	   (SELECT count(postlikedNo)
			   	    FROM postliked
			   	    WHERE postNo = p.postNo) as liked
			FROM posts p
		]]>
	</select>
	
	<!-- 내가 팔로우 하는 사람들의 피드 출력 -->
	<select id="selectMyPost" parameterType="UserVo" resultType="PostVo">
		<![CDATA[
			SELECT p.postNo,
				   p.userNo,
				   u.userName,
			   	   p.postContent,
			   	   p.postRegDate,
			   	   p.postHit,
			   	   p.postRepImg,
			   	   (SELECT count(postlikedNo) 
			   	    FROM postliked 
			   	    WHERE postNo = p.postNo) AS liked,
			   	   (SELECT count(postlikedNo) 
			   	    FROM postliked 
			   	    WHERE postNo = p.postNo AND userNo=#{userNo}) AS likedByAuth 
			 FROM posts p join users u
			 ON p.userNo = u.userNo
			 WHERE p.userno IN (SELECT relationTo
							  FROM userrelation
							  WHERE relationFrom=#{userNo} AND relationType=0)
			 ORDER BY p.postRegDate DESC
		]]>
	</select>
	
	<!-- 특정 피드 정보 출력 -->
	<select id="selectDistinctPost" parameterType="PostVo" resultType="PostVo">
		<![CDATA[
			SELECT p.postNo,
				   p.userNo,
				   u.userName,
			   	   p.postContent,
			   	   p.postRegDate,
			   	   p.postHit,
			   	   p.postRepImg,
			   	   (SELECT count(postlikedNo)  
			   	    FROM postliked 
			   	    WHERE postNo = p.postNo) AS liked,
			   	   (SELECT count(postlikedNo)  
			   	    FROM postliked 
			   	    WHERE postNo = p.postNo AND userNo=#{userNo}) AS likedByAuth 
			FROM posts p join users u
			ON p.userNo = u.userNo
			WHERE p.postNo = #{postNo} 
		]]>
	</select>
	
	<!-- 게시글에 해당하는 이미지 로딩 -->
	<select id="selectPostImg" parameterType="int" resultType="PostfileVo">
		<![CDATA[
			SELECT postFileNo,
				   postNo,
				   postFilePath
			FROM postfile
			WHERE postNo = #{postNo}
		]]>
	</select>
	
	<!-- 조회수 처리 -->
	<update id="updateHit" parameterType="PostVo">
		<![CDATA[
			UPDATE posts 
			SET posthit=posthit+1 
			WHERE postno = #{postNo}
		]]>
	</update>
	
	<select id="selectLike" parameterType="map" resultType="int">
		<![CDATA[
			SELECT count(postlikedNo)
			FROM postliked
			WHERE postNo = #{postNo} AND userNo = #{userNo}
		]]>
	</select>
	
	<insert id="insertLike" parameterType="map">
		<![CDATA[
			INSERT INTO postliked 
						(postLikedNo,
						 postNo,
						 userNo)
			VALUES(seq_liked_no.nextval,
				   #{postNo},
				   #{userNo})
		]]>
	</insert>
	
	<delete id="deleteLike" parameterType="map">
		<![CDATA[
			DELETE FROM postliked 
			WHERE postNo = #{postNo} AND userNo = #{userNo}
		]]>
	</delete>
</mapper>
